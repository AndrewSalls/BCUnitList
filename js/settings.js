import{initializeCategoryCreator}from"./category/category-creator.js";import{createSuperCategoryButton}from"./category/create-settings-category.js";import{checkPort,REQUEST_TYPES}from"./communication/iframe-link.js";let topPos=0;function loadButton(buttonID,storageKey){const target=document.querySelector(buttonID);target.addEventListener("click",()=>{window.localStorage.setItem(storageKey,target.classList.toggle("inactive")?"0":"1")}),target.classList.toggle("inactive","0"===window.localStorage.getItem(storageKey))}function finishSetup(){REQUEST_TYPES.GET_NAMES(!0).then(names=>initializeCategoryCreator(REQUEST_TYPES.GET_CATEGORIES,REQUEST_TYPES.MODIFY_CUSTOM_CATEGORY,REQUEST_TYPES.REMOVE_CUSTOM_CATEGORY,names,REQUEST_TYPES.SEND_ALERT));const selection=document.querySelector("#category-selection");selection.classList.add("hidden"),(async()=>{const categoryOrder=await REQUEST_TYPES.GET_CATEGORIES_ORDER(!0);for(const superCategory of Object.keys(categoryOrder).sort())selection.appendChild(createSuperCategoryButton(superCategory,categoryOrder[superCategory]));selection.classList.remove("hidden")})()}function openWarningModal(warningText,warningAction,confirmCallback,showFileSelector=!1){document.querySelector("#warning-action-text").textContent=warningText,document.querySelector("#warning-action-action").textContent=warningAction,document.querySelector("#file-selector")?.classList.toggle("hidden",!showFileSelector),document.querySelector("#confirm-overwrite").onclick=()=>{confirmCallback(),document.querySelector("#warning-modal")?.classList.add("hidden"),document.body.classList.remove("unscrollable"),document.documentElement.scrollTop=topPos,document.body.style.top=""},document.querySelector("#warning-modal")?.classList.remove("hidden"),topPos=document.documentElement.scrollTop,document.body.classList.add("unscrollable"),document.body.style.top=-1*topPos+"px"}function initializeSaveOptions(){document.querySelector("#load-file-save").onclick=()=>{openWarningModal("Loading a save file","overwrite",()=>{const files=document.querySelector("#file-selected").files;if(files){const parser=new FileReader;parser.readAsText(files[0]),parser.onload=()=>{try{if("string"!=typeof parser.result)throw new EvalError("File did not parse to a string");const undata=JSON.parse(window.atob(parser.result));for(const key of Object.keys(undata))window.localStorage.setItem(key,undata[key]);REQUEST_TYPES.SEND_ALERT("File loaded!",!1),window.top?.location.reload()}catch(e){console.error(e),REQUEST_TYPES.SEND_ALERT("Unable to read file!",!0)}},parser.onerror=()=>{REQUEST_TYPES.SEND_ALERT("Unable to read file!",!0)}}else REQUEST_TYPES.SEND_ALERT("No file selected to load!",!0)},!0)},document.querySelector("#load-clipboard-save").onclick=()=>{openWarningModal("Pasting a save file","overwrite",()=>{navigator.clipboard.readText().then(t=>{try{const undata=JSON.parse(window.atob(t));for(const key of Object.keys(undata))window.localStorage.setItem(key,undata[key]);REQUEST_TYPES.SEND_ALERT("Save Pasted!",!1),window.top?.location.reload()}catch(e){REQUEST_TYPES.SEND_ALERT("Unable to parse clipboard text...",!0)}})})},document.querySelector("#write-file-save").onclick=()=>{const data=window.btoa(JSON.stringify({...window.localStorage})),blob=new Blob([data],{type:"text/plain"}),url=URL.createObjectURL(blob),link=document.createElement("a");link.href=url,link.download=`BCC-Save-${(new Date).toLocaleDateString()}.txt`,link.click(),link.remove(),URL.revokeObjectURL(url),REQUEST_TYPES.SEND_ALERT("Downloading save...",!1)},document.querySelector("#write-clipboard-save").onclick=()=>{const data=window.btoa(JSON.stringify({...window.localStorage}));navigator.clipboard.writeText(data),REQUEST_TYPES.SEND_ALERT("Copied Save!",!1)},document.querySelector("#delete-save").onclick=()=>openWarningModal("Deleting your save file","erase",()=>{const localKeys={...window.localStorage};for(const key of Object.keys(localKeys))window.localStorage.removeItem(key);REQUEST_TYPES.DELETE_USER_DATA("Save data deleted...",!0)})}function loadSortButtons(orderedIDs){const targets=orderedIDs.map(id=>document.querySelector(id));for(let x=0;x<targets.length;x++)targets[x].classList.add("inactive"),targets[x].addEventListener("click",()=>{window.localStorage.setItem("skey",`${x}`),targets.forEach(t=>t.classList.add("inactive")),targets[x].classList.remove("inactive")});targets[parseInt(window.localStorage.getItem("skey")??"0")]?.classList.remove("inactive")}document.addEventListener("DOMContentLoaded",()=>{loadButton("#fake-filter","f1"),loadButton("#collab-filter","f2"),loadButton("#version-filter","f3"),loadButton("#unobtained-filter","f4"),loadButton("#favorite-filter","f5"),loadButton("#obtained-filter","f6"),loadButton("#arrow-upgrade-filter","s1"),loadButton("#auto-collapse-filter","s2"),loadButton("#show-empty-filter","s3"),loadButton("#auto-group-collapse-filter","s5"),loadButton("#history-filter","s6"),loadButton("#single-category-filter","s7"),loadSortButtons(["#ingame-sort-option","#id-sort-option","#name-sort-option","#form-sort-option","#level-sort-option","#talent-sort-option","#orb-sort-option","#favorite-sort-option"]);const ascendingToggle=document.querySelector("#toggle-ascending"),ascendingToggleText=ascendingToggle.querySelector("span");ascendingToggle.onclick=()=>{window.localStorage.setItem("sasc",ascendingToggle.classList.toggle("descending")?"N":"Y"),ascendingToggleText.textContent="Y"===window.localStorage.getItem("sasc")?"Ascending":"Descending"},ascendingToggle.classList.toggle("descending","N"===window.localStorage.getItem("sasc")),document.querySelector("#cancel-overwrite").onclick=()=>{document.querySelector("#warning-modal")?.classList.add("hidden"),document.body.classList.remove("unscrollable"),document.documentElement.scrollTop=topPos},document.querySelectorAll("section > h3").forEach(h=>h.onclick=()=>h.classList.toggle("section-collapse"));const fileSelector=document.querySelector("#file-selected"),fileLabel=document.querySelector("#file-name");fileSelector.onchange=()=>{if(fileSelector.files){const fileName=fileSelector.files.length>0?fileSelector.files[0].name:"No file selected";fileLabel.textContent=fileName}},initializeSaveOptions(),window.addEventListener("portLoaded",finishSetup),checkPort()&&window.dispatchEvent(new CustomEvent("portLoaded"))});