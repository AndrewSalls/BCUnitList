import{FORM}from"../../data/unit-data.js";import{createLevelInteractable,createOrbInteractable,createTalentInteractable}from"./create-row-interactable.js";import SETTINGS from"../../../assets/settings.js";import createStatRow from"./create-stat-row.js";import{getActiveCallbacks}from"../filter-units.js";export default function createRow(entry){const row=document.createElement("tr");row.classList.add("unit-mod-row"),row.dataset.is_collab=entry.collab?"Y":"N",row.dataset.in_en=entry.in_EN?"Y":"N",row.dataset.is_unobtainable=entry.unobtainable?"Y":"N",row.dataset.rarity=entry.rarity,row.classList.toggle("hidden",entry.hidden);const idBox=createIDBox(entry.id),[nameBox,nameUpdate]=createNameBox([entry.normal_form,entry.evolved_form,entry.true_form,entry.ultra_form],entry.current_form),iconBox=createIconBox(entry.id,entry.current_form,entry.max_form,SETTINGS.skipImages.includes(entry.id),nameUpdate),levelBox=createLevelBox(entry.id,entry.level_cap,entry.level,entry.plus_level),talentBox=createTalentBox(entry.talents,entry.ultra_talents),orbBox=createOrbBox(entry.orb),favoriteBox=createFavoriteBox(entry.favorited);let statRow=null,unobserveCallback=null;const optionsBox=createOptionsBox(_this=>{if(_this.classList.contains("displaying"))_this.classList.remove("displaying"),unobserveCallback?.(),statRow?.remove(),statRow=null;else{_this.classList.add("displaying"),unobserveCallback=null;const res=createStatRow(entry,row);statRow=res.row,unobserveCallback=res.callback,row.insertAdjacentElement("afterend",statRow)}},_this=>{const updateCallbacks=getActiveCallbacks();for(const key of Object.keys(updateCallbacks))updateCallbacks[key](row);"hide"in updateCallbacks&&null!==statRow&&(_this.classList.remove("displaying"),unobserveCallback?.(),statRow?.remove(),statRow=null)});return row.append(idBox,iconBox,nameBox,levelBox,talentBox,orbBox,favoriteBox,optionsBox),row}export function createIDBox(id){const rowID=document.createElement("td");return rowID.classList.add("row-id"),rowID.textContent=`${id}`,rowID}export function createIconBox(id,currentForm,maxForm,iconDisabled,nameCallback){const rowImage=document.createElement("td");rowImage.classList.add("row-image"),rowImage.dataset.form=`${currentForm}`,rowImage.dataset.max_form=`${maxForm}`;const rowIMG=document.createElement("img");return rowIMG.classList.add("unit-icon"),rowIMG.loading="lazy",iconDisabled?rowIMG.src="./assets/img/unit_icon/unknown.png":(rowIMG.src=`./assets/img/unit_icon/${id}_${currentForm}.png`,rowIMG.addEventListener("click",()=>{rowImage.dataset.form===`${maxForm}`?rowImage.dataset.form="0":rowImage.dataset.form=`${parseInt(rowImage.dataset.form??"-1")+1}`,rowIMG.classList.contains("hidden")||(rowIMG.src=`./assets/img/unit_icon/${id}_${rowImage.dataset.form}.png`),nameCallback(parseInt(rowImage.dataset.form))})),rowImage.appendChild(rowIMG),rowImage}export function createNameBox(names,currentForm){const rowName=document.createElement("td");return rowName.classList.add("row-name"),rowName.dataset.normal_name=names[0]??"",rowName.dataset.evolved_name=names[1]??"",rowName.dataset.true_name=names[2]??"",rowName.dataset.ultra_name=names[3]??"",rowName.textContent=names[currentForm],[rowName,form=>rowName.textContent=names[form]]}export function createLevelBox(id,levelCapInfo,currentLevel,currentPlusLevel){const rowLevel=document.createElement("td");rowLevel.classList.add("row-level");const horizontalAlign=document.createElement("span");horizontalAlign.classList.add("h-align");const maxLevel=createLevelInteractable(levelCapInfo.MaxLevel,currentLevel);horizontalAlign.appendChild(maxLevel);const maxLevelInput=maxLevel.querySelector(".level-select")??maxLevel;if(maxLevelInput.classList.add("max-level"),0===id&&(maxLevelInput.min="1"),levelCapInfo.MaxPlusLevel>0){const plusText=document.createElement("p");plusText.classList.add("level-text"),plusText.innerText="+",horizontalAlign.appendChild(plusText);const maxPlusLevel=createLevelInteractable(levelCapInfo.MaxPlusLevel,currentPlusLevel);horizontalAlign.appendChild(maxPlusLevel);(maxPlusLevel.querySelector(".level-select")??maxPlusLevel).classList.add("max-plus-level")}return rowLevel.appendChild(horizontalAlign),rowLevel}export function createTalentBox(normalTalents,ultraTalents){const rowTalents=document.createElement("td");rowTalents.classList.add("row-talent");const horizontalAlign=document.createElement("div");if(horizontalAlign.classList.add("h-align"),0!==normalTalents.length)for(const talent of normalTalents)horizontalAlign.appendChild(createTalentInteractable(talent.name,talent.cap,talent.value,!1));if(0!==ultraTalents.length)for(const talent of ultraTalents)horizontalAlign.appendChild(createTalentInteractable(talent.name,talent.cap,talent.value,!0));return rowTalents.appendChild(horizontalAlign),rowTalents}export function createOrbBox(existingOrbs){const rowOrb=document.createElement("td");rowOrb.classList.add("row-orb");let horizontalAlign=null;if(existingOrbs.length>0){horizontalAlign=document.createElement("div"),horizontalAlign.classList.add("h-align");for(let x=0;x<existingOrbs.length;x++)horizontalAlign.appendChild(createOrbInteractable(existingOrbs[x]));rowOrb.appendChild(horizontalAlign)}return rowOrb}export function createFavoriteBox(isFavorited){const rowFavorite=document.createElement("td");rowFavorite.classList.add("row-favorite");const favWrapper=document.createElement("div");favWrapper.classList.add("fav-wrapper");const favIcon=document.createElement("img");return favIcon.classList.add("fav-icon"),favIcon.src="./assets/img/fav-empty.png",favWrapper.dataset.favorited=""+(isFavorited?0:1),favIcon.onclick=()=>{"0"===favWrapper.dataset.favorited?(favIcon.src="./assets/img/fav-full.png",favWrapper.dataset.favorited="1"):(favIcon.src="./assets/img/fav-empty.png",favWrapper.dataset.favorited="0")},favIcon.click(),favWrapper.appendChild(favIcon),rowFavorite.appendChild(favWrapper),rowFavorite}export function createOptionsBox(statDisplayCallback,quickEditCallback){const rowOptions=document.createElement("td");rowOptions.colSpan=2,rowOptions.classList.add("row-option");const rowOptionAlign=document.createElement("div");rowOptionAlign.classList.add("row-option-wrapper");const viewStats=document.createElement("button");return viewStats.classList.add("stat-display-option"),viewStats.classList.add("option-button"),viewStats.onclick=()=>{document.body.classList.contains("quick-update-enabled")?quickEditCallback(viewStats):statDisplayCallback(viewStats)},rowOptionAlign.appendChild(viewStats),rowOptions.appendChild(rowOptionAlign),rowOptions}