export default class CategoryData{#categories;#categoryOrdering;constructor(categories){this.#categories=categories,this.#categoryOrdering={};for(const superKey of Object.keys(this.#categories)){const sortedSubKeys=Object.keys(this.#categories[superKey]).sort((ka,kb)=>this.#categories[superKey][ka][0]-this.#categories[superKey][kb][0]);this.#categoryOrdering[superKey]=sortedSubKeys}}getCategories(isFiltered){const clone={};for(const superKey of Object.keys(this.#categories)){const categoryFilterBitfield=window.localStorage.getItem(`gk-${superKey}`)??"";if(!isFiltered||"0"!==categoryFilterBitfield.charAt(0)){const cloneSub={},subKeyOrder=this.#categoryOrdering[superKey];for(let x=0;x<subKeyOrder.length;x++)isFiltered&&"0"===categoryFilterBitfield.charAt(x+1)||(cloneSub[subKeyOrder[x]]=this.#categories[superKey][subKeyOrder[x]]);cloneSub&&(clone[superKey]=cloneSub)}}return clone}getCategoryOrders(){return this.#categoryOrdering}setCustomCategory(name,units){this.#categories.custom||(this.#categories.custom={},this.#categoryOrdering.custom=[]),this.#categories.custom[name]=units.sort(),this.#categoryOrdering.custom.push(name),this.#recordCustomCategory(name,units)}removeCustomCategory(name){delete this.#categories.custom[name],this.#categoryOrdering.custom.splice(this.#categoryOrdering.custom.indexOf(name),1),0===Object.keys(this.#categories.custom).length&&(delete this.#categories.custom,delete this.#categoryOrdering.custom),this.#recordCustomCategory(name,[])}#recordCustomCategory(categoryName,categoryValues){0===categoryValues.length?window.localStorage.removeItem(`_cc-${categoryName}`):window.localStorage.setItem(`_cc-${categoryName}`,window.btoa(JSON.stringify({c:categoryName,v:categoryValues})))}}